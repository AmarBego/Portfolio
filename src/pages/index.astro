---
import Layout from '../layouts/Layout.astro';
import { Image } from 'astro:assets';
import profileImage from '../images/ME.png';
import '../styles/glitch.css';
import { translate, getLanguage } from '../utils/translation.js';

const currentLang = getLanguage();
---

<Layout title="Amar Begovic - Web Developer">
    <main>
        <div class="container">
            <div class="language-switcher">
                <button id="lang-en" class={currentLang === 'en' ? 'active' : ''}>EN</button>
                <button id="lang-de" class={currentLang === 'de' ? 'active' : ''}>DE</button>
            </div>
            <div class="image-container">
                <Image src={profileImage} alt="Amar Begovic" class="profile-image" />
                <div class="image-overlay"></div>
            </div>
            <div class="content">
                <h1 class="glitch" data-text="Amar Begovic">Amar Begovic</h1>
                <p class="subheadline" data-i18n="webDeveloperDesigner">{translate('webDeveloperDesigner', currentLang)}</p>
                <p class="intro" data-i18n="introGreeting">{translate('introGreeting', currentLang)}</p>
                <div class="skills">
                    <span class="skill" data-i18n="skills.html">{translate('skills.html', currentLang)}</span>
                    <span class="skill" data-i18n="skills.css">{translate('skills.css', currentLang)}</span>
                    <span class="skill" data-i18n="skills.javascript">{translate('skills.javascript', currentLang)}</span>
                    <span class="skill" data-i18n="skills.react">{translate('skills.react', currentLang)}</span>
                    <span class="skill" data-i18n="skills.astro">{translate('skills.astro', currentLang)}</span>
                    <span class="skill" data-i18n="skills.nodejs">{translate('skills.nodejs', currentLang)}</span>
                </div>
                <p class="description" data-i18n="description">
                    {translate('description', currentLang)}
                </p>
                <p class="personal" data-i18n="personal">
                    {translate('personal', currentLang)}
                </p>
                <div class="cta-container">
                    <a href="/projects" class="cta-button" data-i18n="viewProjects">{translate('viewProjects', currentLang)}</a>
                    <a href="/contact" class="cta-button" data-i18n="letsConnect">{translate('letsConnect', currentLang)}</a>
                </div>
            </div>
        </div>
    </main>
</Layout>

<script>
    import { setupClientTranslation } from '../utils/translation.js';
    setupClientTranslation();
</script>

<style>
    main {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--background);
        overflow: hidden;
    }
	.container {
        display: flex;
        max-width: 1200px;
        margin: 2rem;
        background: rgba(44, 44, 44, 0.3);
        border-radius: 20px;
        box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
        backdrop-filter: blur(4px);
        border: 1px solid rgba(255, 255, 255, 0.18);
        overflow: hidden; /* This ensures the image doesn't overflow the rounded corners */
    }

    .image-container {
        flex: 1;
        position: relative;
        overflow: hidden;
        border-top-left-radius: 20px;
        border-bottom-left-radius: 20px;
    }

    .profile-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(45deg, rgba(52, 152, 219, 0.5), rgba(41, 128, 185, 0.5));
        opacity: 0;
        transition: opacity 0.3s ease;
        border-top-left-radius: 20px;
        border-bottom-left-radius: 20px;
    }

    .image-container:hover .profile-image {
        transform: scale(1.05);
    }

    .image-container:hover .image-overlay {
        opacity: 1;
    }
    .content {
        flex: 1;
        padding: 2rem;
        color: var(--paragraph);
        padding-top: 0%;
    }
    .subheadline {
        font-size: 1.5rem;
        color: var(--button);
        margin-bottom: 1rem;
    }
    .intro {
        font-size: 1.2rem;
        margin-bottom: 1rem;
    }
    .skills {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }
    .skill {
        background: rgba(var(--button-rgb), 0.1);
        color: var(--button);
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.9rem;
        border: 1px solid var(--button);
        transition: background-color 0.3s ease, transform 0.3s ease;
    }
    .skill:hover {
        background: rgba(var(--button-rgb), 0.2);
        transform: translateY(-2px);
    }
    .description, .personal {
        margin-bottom: 1rem;
    }
    .cta-container {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }
    .cta-button {
        display: inline-block;
        background: var(--button);
        color: var(--button-text);
        padding: 0.75rem 1.5rem;
        border-radius: 25px;
        text-decoration: none;
        font-weight: bold;
        transition: background 0.3s ease, transform 0.3s ease;
    }
    .cta-button:hover {
        background: var(--highlight);
        transform: translateY(-3px);
    }
    @media (max-width: 768px) {
        .container {
            flex-direction: column;
        }
        .image-container {
            height: 300px;
        }
        .cta-container {
            justify-content: center;
        }
    }

    .language-switcher {
        position: absolute;
        top: 20px;
        right: 20px;
        z-index: 10;
        display: flex;
        gap: 5px;
    }
    .language-switcher button {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid var(--button);
        color: var(--button);
        padding: 5px 10px;
        margin-left: 5px;
        cursor: pointer;
        transition: background-color 0.3s, color 0.3s;
    }
    .language-switcher button.active,
    .language-switcher button:hover {
        background: var(--button);
        color: var(--button-text);
    }
    .container {
        position: relative;
    }
</style>