---
import Layout from '../layouts/Layout.astro';
import { Icon } from 'astro-icon/components';
import TransactionModal from '../components/TransactionModal.astro';
import '../styles/global.css';
import '../styles/glitch.css';

interface User {
  _id: string;
  email: string;
  selectedTheme: string;
  __v: number;
  username: string;
  role?: string;
  lastActive?: Date;
  dateJoined?: Date;
}

const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/api/users`);
const users: User[] = await response.json();
---

<Layout title="Users | Amar Begovic">
    <main class="main">
        <h1 class="glitch" data-text="Users">Users</h1>

        <div class="controls">
            <div class="search-container">
                <Icon name="mdi:magnify" />
                <input type="text" id="search" placeholder="Search users..." />
            </div>
        </div>

        <div class="table-container">
            <table class="users-table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Last Active</th>
                        <th>Date Joined</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="users-body">
                    {users.map((user: User) => (
                        <tr data-user-id={user._id}>
                            <td>{user.username}</td>
                            <td>{user.lastActive ? new Date(user.lastActive).toLocaleDateString() : 'N/A'}</td>
                            <td>{user.dateJoined ? new Date(user.dateJoined).toLocaleDateString() : 'N/A'}</td>
                            <td>
                                <div class="action-buttons">
                                    <button class="view-expenses" title="View Expenses">
                                        <Icon name="mdi:cash" />
                                    </button>
                                    <button class="view-due-transactions" title="Due Transactions">
                                        <Icon name="mdi:calendar-clock" />
                                    </button>
                                </div>
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>

        <div class="pagination">
            <button id="prev-page" disabled><Icon name="mdi:chevron-left" /> Previous</button>
            <span id="page-info">Page 1 of 1</span>
            <button id="next-page" disabled>Next <Icon name="mdi:chevron-right" /></button>
        </div>
        <TransactionModal />
    </main>
</Layout>

<script>
    import { setupEventListeners } from '../scripts/userManagement';

    document.addEventListener('DOMContentLoaded', () => {
        setupEventListeners();
    });
</script>

<style>
.controls {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
    align-items: center;
    flex-wrap: wrap;
}

.search-container {
    position: relative;
    flex-grow: 1;
    min-width: 200px;
}

.search-container input {
    width: 100%;
    padding: 0.5rem 0.5rem 0.5rem 2rem;
    border-radius: 20px;
    border: 1px solid var(--stroke);
    background-color: var(--background);
    color: var(--paragraph);
}

.search-container :global(svg) {
    position: absolute;
    left: 0.5rem;
    top: 50%;
    transform: translateY(-50%);
    color: var(--paragraph);
}

select {
    padding: 0.5rem;
    border-radius: 20px;
    border: 1px solid var(--stroke);
    background-color: var(--background);
    color: var(--paragraph);
}

    .table-container {
        overflow-x: auto;
        background: rgba(255, 255, 255, 0.05);
        min-width: 50%;
        border-radius: 10px;
        padding: 1rem;
        margin-bottom: 1rem;
    }

    .users-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        text-align: center;
    }

    .users-table th, .users-table td {
        padding: 1rem;
        text-align: center;
        border-bottom: 1px solid var(--stroke);
    }

    .users-table tr:last-child td {
        border-bottom: none;
    }

    .action-buttons {
    display: flex;
    gap: 0.5rem;
    justify-content: center;
}

.action-buttons button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.25rem;
    border-radius: 50%;
    transition: background-color 0.3s;
    display: flex;
    align-items: center;
    justify-content: center;
}

.action-buttons button:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

.action-buttons :global(svg) {
    width: 20px;
    height: 20px;
    color: var(--paragraph);
    fill: currentColor;
}

    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 1rem;
    }

    .pagination button {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        padding: 0.5rem 1rem;
        border: none;
        background-color: var(--button);
        color: var(--button-text);
        border-radius: 20px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .pagination button:hover:not(:disabled) {
        background-color: var(--highlight);
    }

    .pagination button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    .pagination span {
        margin: 0 1rem;
        color: var(--paragraph);
    }
</style>